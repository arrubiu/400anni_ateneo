<?php

use Drupal\block_content\BlockContentInterface;
use Drupal\file\Entity\File;
use Drupal\media\Entity\Media;

/**
 * Implements hook_preprocess_html()
 */
function archivio_preprocess_html(&$variables) {
  $node = \Drupal::request()->attributes->get('node');

  $current_uri = \Drupal::request()->getRequestUri();
  $variables['attributes']['class'][] = 'custom-path-' . str_replace('/', '', $current_uri);


  $variables['archivio_container'] = 'container';

  if ($node) {
    $variables['attributes']['class'][] = 'nodo-' . $node->bundle();

    if ($node->bundle() == 'page') {
      $variables['archivio_container'] = 'no-container';
    }
  }
}

/**
 * Implements hook_preprocess_page()
 */
function archivio_preprocess_page(&$variables) {
  $variables['ente_appartenenza'] = theme_get_setting('ente_appartenenza');

  $node = \Drupal::request()->attributes->get('node');

  $variables['archivio_container'] = 'container';

  if ($node) {
    if ($node->bundle() == 'page') {
      $variables['archivio_container'] = 'no-container';
    }
  }
}

/**
 * Implements hook_preprocess_page()
 */
function archivio_preprocess_field(&$vars) {
  $element = $vars['element'];

  if ($vars['element']['#field_name'] == 'field_data_inizio_carriera') {
    $node = $vars['element']['#object'];
    if ($node->bundle() == 'carriera' && !$node->get('field_tipologia_carriera')->isEmpty()) {
      $tipologia = $node->get('field_tipologia_carriera')->getValue();
      if ($tipologia[0]['value'] == 's') {
        $vars['label'] = 'Anno accademico di immatricolazione';
      }
    }
  }

  if ($vars['element']['#field_name'] == 'field_data_fine_carriera') {
    $node = $vars['element']['#object'];
    if ($node->bundle() == 'carriera' && !$node->get('field_tipologia_carriera')->isEmpty()) {
      $tipologia = $node->get('field_tipologia_carriera')->getValue();
      if ($tipologia[0]['value'] == 's') {
        $vars['label'] = 'Anno accademico di laurea';
      }
    }
  }
}

/**
 * Implements hook_theme_suggestions_page_alter().
 * https://www.drupal.org/node/2521876#comment-10684366
 */
function aarchivio_suggestions_page_alter(array &$suggestions, array $variables) {
  // Add content type suggestions.
  if (($node = \Drupal::request()->attributes->get('node')) && (strpos($_SERVER['REQUEST_URI'], "revisions") == false)) {
    array_splice($suggestions, 1, 0, 'page__node__' . $node->getType());
    $variables['content_type_name'] = $node->getType();
  }
}

/**
 * Implements hook_preprocess_HOOK() for block.html.twig.
 */
function archivio_preprocess_block(&$variables) {
  // Add the block ID as custom attribute to block content, this will be used
  // for menu template suggestions.
  if (isset($variables['elements']['#id'])){
    $variables['content']['#attributes']['block'] = $variables['elements']['#id'];
  }

  if (isset($variables['elements']['#id'])) {
    $variables['content']['#attributes']['block'] = $variables['elements']['#id'];
  }

  $variables['base_path'] = base_path();

  if (isset($variables['elements']['content']['#block_content'])) {
    $block = $variables['elements']['content']['#block_content'];
    if ($variables['plugin_id'] == "inline_block:hero" || $variables['plugin_id'] == "inline_block:homepage_top") {
      if ($block->hasField('field_immagine_sfondo')) {
        if (!$block->get('field_immagine_sfondo')->isEmpty()) {
          $mid = $block->field_immagine_sfondo[0]->getValue()['target_id'];
          $fid = Media::load($mid)->field_media_image[0]->getValue()['target_id'];
          $file = File::load($fid);
          $variables['immagine_sfondo'] = $file->url();
          $a = 1;
        }
      }
    }
  }


}


/**
 * Implements hook_theme_suggestions_block_alter().
 */
function archivio_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  $content = $variables['elements']['content'];
  if (isset($content['#block_content']) and $content['#block_content'] instanceof BlockContentInterface) {
    $bundle = $content['#block_content']->bundle();
    $view_mode = $content['#view_mode'];
    $suggestions[] = 'block__' . $bundle ;
    $suggestions[] = 'block__' . $view_mode;
    $suggestions[] = 'block__' . $bundle . '__' . $view_mode;
  }
}

/**
 * Implements hook_entity_view().
 */
function archivio_preprocess_node(&$vars) {
  $service = \Drupal::service('archivio_utils.utils');
  global $base_url;
  $vars['base_url'] = $base_url;
  $view_mode = $vars['view_mode'];
  /**  @var \Drupal\node\Entity\Node $node **/
  /**  @var \Drupal\node\Entity\Node $carriera **/
  $node = $vars['node'];

  if ($node->bundle() == 'persona' && $view_mode == 'full') {

    $vars['indirizzo'] = FALSE;
    if (!$node->get('field_indirizzo')->isEmpty()) {
      $indirizzo = $node->get('field_indirizzo')->getValue();
      if (!empty($indirizzo[0]['locality'])) {
        $vars['indirizzo'] = TRUE;
      }
    }

    $author_name = $node->getOwner();
    if (!$author_name->get('field_nome_e_cognome')->isEmpty()) {
      $autore_nome = $author_name->get('field_nome_e_cognome')->getValue();
      $vars['autore'] = $autore_nome[0]['value'];
    } else {
      $vars['autore'] = 'Nome dell\'autore';
    }

    $query = \Drupal::entityQuery('node')
      ->condition('field_persona', $node->id())
      ->condition('type', 'carriera');

    $vars['carriere']['docente'] = FALSE;
    $vars['carriere']['studente'] = FALSE;
    $vars['carriere']['rettore'] = FALSE;

    $nids = $query->execute();
    if (count($nids) > 0) {
      $studente = array();
      $docente = array();
      $rettore = array();
      $carriere = \Drupal::entityTypeManager()->getStorage('node')->loadMultiple($nids);
      foreach ($carriere as $carriera) {
        $tipologia = $carriera->get('field_tipologia_carriera')->getValue();
        if ($tipologia[0]['value'] == 's') {
          $studente[] = "s";
        }
        if ($tipologia[0]['value'] == 'd') {
          $docente[] = "s";
        }
        if ($tipologia[0]['value'] == 'r') {
          $rettore[] = "r";
        }

      }
    }

    if (count($studente) > 0) {
      $vars['carriere']['studente'] = count($studente);
    }

    if (count($docente) > 0) {
      $vars['carriere']['docente'] = count($docente);
    }

    if (count($rettore) > 0) {
      $vars['carriere']['rettore'] = count($rettore);
    }

  }

  if ($node->bundle() == 'carriera') {
      $tipologia = $node->get('field_tipologia_carriera')->getValue();
      $vars['laureato'] = FALSE;
      if ($tipologia[0]['value'] == 's') {

        if (!$node->get('field_data_fine_carriera')) {
          $vars['laureato'] = TRUE;
        }
      }

    $vars['revisore'] = false;
    $vars['autore'] = false;

    if (!$node->get('field_revisore')->isEmpty()) {
        $vars['revisore'] = $service->implodeValue($node, 'field_revisore');
      }

    if (!$node->get('field_autore')->isEmpty()) {
      $vars['autore'] = $service->implodeValue($node, 'field_autore');
    }

  }

}

/**
 * Implements hook_theme_suggestions_taxonomy_term_alter().
 */
function archivio_theme_suggestions_taxonomy_term_alter(&$suggestions, &$vars) {
  $suggestions[] = 'taxonomy_term__' . $vars['elements']['#view_mode'];
  $suggestions[] = 'taxonomy_term__' . $vars['elements']['#taxonomy_term']->getVocabularyId();
  $suggestions[] = 'taxonomy_term__' . $vars['elements']['#taxonomy_term']->getVocabularyId() . '__' . $vars['elements']['#view_mode'];
}

